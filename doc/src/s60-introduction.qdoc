/****************************************************************************
**
** Copyright (C) 2008 Nokia Corporation and/or its subsidiary(-ies).
** Contact: Qt Software Information (qt-info@nokia.com)
**
** This file is part of the $MODULE$ of the Qt Toolkit.
**
** $TROLLTECH_DUAL_LICENSE$
**
****************************************************************************/

/*!
    \page s60-with-qt-introduction.html

    \title S60 - Introduction to using Qt
    \brief An introduction to Qt for S60 developers.
    \ingroup howto
    \ingroup qts60

    \tableofcontents

    \section1 Installing Qt

    Follow the instructions found in \l{Installing Qt on S60}.

    \section1 Building your own applications

    If you are new to Qt development, have a look at \l{How to Learn Qt}. 
    In general, the difference between developing a
    Qt application on S60 compared to any of the other platforms supported
    by Qt is not that big.

    Once you have crated a \c .pro file for your project, generate the
    Carbide specific \c Bld.inf and \c .mmp files this way:

    \snippet doc/src/snippets/code/doc_src_s60-introduction.qdoc 0

    For more information on how to use qmake have a look at the \l
    {qmake Tutorial}.

    Now you can build the Qt on S60 application with standard build
    tools. By default, running \c make will produce binaries for the
    emulator. However, S60 comes with several alternative build targets,
    as shown in the table below:

    \table
    \row \o \c debug-winscw  \o Build debug binaries for the emulator (default).
                                It is currently not possible to build release
                                binaries for the emulator.
    \row \o \c debug-gcce    \o Build debug binaries for hardware using GCCE.
    \row \o \c release-gcce  \o Build release binaries for hardware using GCCE.
    \row \o \c debug-armv5   \o Build debug binaries for hardware using RVCT.
    \row \o \c release-armv5 \o Build release binaries for hardware using RVCT.
    \row \o \c run           \o Run the emulator binaries from the build directory.
    \endtable

    The following lines perform a debug build for the emulator
    and deploy all the needed files:

    \snippet doc/src/snippets/code/doc_src_s60-introduction.qdoc 1

    To work on your project in Carbide, simply import the \c .pro file
    by right clicking on the project explorer and executing "Import...".

    \section1 Installing your own applications

    To install your own applications on hardware, Qt comes with a tool called
    \c createpackage. When used on the \c .pkg files created by qmake, it
    will produce a \c .sisx file that can be installed to the device. For
    example:

    \snippet doc/src/snippets/code/doc_src_s60-introduction.qdoc 2

    If you want to install the program immediately, make sure that the device
    is connected to the computer in "PC Suite" mode, and run \c createpackage
    with the \c -i switch, like this:

    \snippet doc/src/snippets/code/doc_src_s60-introduction.qdoc 3
*/
