load(qt)

isEmpty(DESTDIR) {
    DESTDIR = .
}

for(libraries, LIBS) {
    isFullName = $$find(libraries, \.)
    isEmpty(isFullName) {
        newLIBS += "$${libraries}.dso"
    } else {
        newLIBS += "$${libraries}"
    }
}
LIBS = $$newLIBS
newLIBS =
for(libraries, QMAKE_LIBS) {
    isFullName = $$find(libraries, \.)
    isEmpty(isFullName) {
        newLIBS += "$${libraries}.dso"
    } else {
        newLIBS += "$${libraries}"
    }
}
QMAKE_LIBS = $$newLIBS

# This needs to be done after the above LIBS mangling.
include(../platformlibs.conf)

elf2e32_LIBPATH =
for(libPath, QMAKE_LIBDIR) {
    elf2e32_LIBPATH += "--libpath=$$libPath"
}

splitVersion = $$split(VERSION, ".")
intVersion = "00"
for(verNumber, splitVersion) {
    # Poor man's printf
    !contains(verNumber, "[0-9][0-9]"):intVersion = "$${intVersion}0"
    intVersion = "$${intVersion}$${verNumber}"
}

intUid3 = $$lower($$replace(TARGET.UID3, "^0x", ""))

contains(TEMPLATE, lib):!contains(CONFIG, static):!contains(CONFIG, staticlib) {
    !isEmpty($$QMAKE_POST_LINK):QMAKE_POST_LINK += &&
    QMAKE_POST_LINK += $$QMAKE_MOVE $$DESTDIR/$${TARGET}.dll $$DESTDIR/$${TARGET}.sym
    QMAKE_POST_LINK += && elf2e32  --version 4.1536 --sid 0xe001b2dc  --uid1 0x10000079 --uid2 0x1000008d --uid3 0xe001b2dc --dlldata --heap=0x00020000,0x00800000 --stack=0x00014000 --capability=None --fpu=softvfp --targettype=DLL --elfinput=$${DESTDIR}/$${TARGET}.sym --output=$${DESTDIR}/$${TARGET}.dll --dso=$$DESTDIR/$${TARGET}.dso --defoutput=$$OBJECTS_DIR/$${TARGET}.def --unfrozen --linkas=$${TARGET}\\{$${intVersion}\\}\\[$${intUid3}\\].dll --compressionmethod bytepair $$elf2e32_LIBPATH --unpaged
    QMAKE_DISTCLEAN += $${DESTDIR}/$${TARGET}.sym
    QMAKE_DISTCLEAN += $${DESTDIR}/$${TARGET}.dso
    QMAKE_CLEAN += $${OBJECTS_DIR}/$${TARGET}.def

    QMAKE_LIBS += -ledllstub.lib -ledll.lib\\(uc_dll_.o\\)

    QMAKE_LFLAGS += --symver_soname --soname $${TARGET}\\{$${intVersion}\\}\\[$${intUid3}\\].dll
}

contains(TEMPLATE, app) {
    !isEmpty($$QMAKE_POST_LINK):QMAKE_POST_LINK += &&

    QMAKE_POST_LINK += $$QMAKE_MOVE $$DESTDIR/$${TARGET} $$DESTDIR/$${TARGET}.sym
    QMAKE_POST_LINK += && elf2e32  --version 4.1536 --sid 0xe001b2dc  --uid1 0x10000079 --uid2 0x1000008d --uid3 $$TARGET.UID3 --dlldata --heap=0x00020000,0x00800000 --stack=0x00014000 --capability=None --fpu=softvfp --targettype=EXE --elfinput=$${DESTDIR}/$${TARGET}.sym --output=$${DESTDIR}/$${TARGET}.exe --unfrozen --linkas=$${TARGET}\\{$${intVersion}\\}\\[$${intUid3}\\].exe --compressionmethod bytepair $$elf2e32_LIBPATH --unpaged
    QMAKE_DISTCLEAN += $${DESTDIR}/$${TARGET}.exe

    QMAKE_LIBS += -leexe.lib\\(uc_exe_.o\\)

    QMAKE_LFLAGS += --symver_soname --soname $${TARGET}\\{$${intVersion}\\}\\[$${intUid3}\\].dll
}

# Symbian resource files

linux-armcc:symbian_resources_INCLUDES = -I$$(RVCT22INC)
symbian_resources_INCLUDES = $$replace(symbian_resources_INCLUDES, ",", " -I")
symbian_resources_INCLUDES += $$join(INCLUDEPATH, " -I", "-I")
symbian_resources_DEFINES = $$join(DEFINES, " -D", "-D")
symbian_resources_RCC_DIR = $$replace(RCC_DIR, "/$", "")

for(symbian_resource, SYMBIAN_RESOURCES) {
    symbian_resource = $$basename(symbian_resource)
    symbian_resource_clean = $$replace(symbian_resource, "\.rss$", ".rsc")
    QMAKE_CLEAN += $${symbian_resources_RCC_DIR}/$${symbian_resource_clean}
    symbian_resource_clean = $$replace(symbian_resource, "\.rss$", ".rpp")
    QMAKE_CLEAN += $${symbian_resources_RCC_DIR}/$${symbian_resource_clean}
}

symbianresources.input = SYMBIAN_RESOURCES
symbianresources.output = $$symbian_resources_RCC_DIR/${QMAKE_FILE_BASE}.rsg
symbianresources.commands = cpp -nostdinc -undef \
                            $$symbian_resources_INCLUDES \
                            $$symbian_resources_DEFINES \
                            ${QMAKE_FILE_NAME} \
                            -o $${symbian_resources_RCC_DIR}/${QMAKE_FILE_BASE}.rpp \
                            && rcomp -u -m045,046,047 \
                            -s$${symbian_resources_RCC_DIR}/${QMAKE_FILE_BASE}.rpp \
                            -o$${symbian_resources_RCC_DIR}/${QMAKE_FILE_BASE}.rsc \
                            -h$${symbian_resources_RCC_DIR}/${QMAKE_FILE_BASE}.rsg \
                            -i${QMAKE_FILE_NAME}
symbianresources.CONFIG = no_link

QMAKE_EXTRA_COMPILERS += symbianresources
